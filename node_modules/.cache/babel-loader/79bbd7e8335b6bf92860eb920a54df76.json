{"ast":null,"code":"var _jsxFileName = \"/Users/student/Documents/vscode/weather-app-v2/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Button from './components/Button.jsx';\nimport Header from './components/Header.jsx';\nimport WeatherTable from './components/WeatherTable.jsx';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async e => {\n      const weatherApiKey = 'd9ff1ea8e6576691d7b12ee8f88d044b';\n      const cityId = e.currentTarget.value;\n\n      if (cityId === 'Lurgan') {\n        const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/weather?id=2652151&appid=\".concat(weatherApiKey, \"&units=metric\"));\n        const data = await api_call.json();\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else if (cityId === 'Liverpool') {\n        const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/weather?id=7839747&appid=\".concat(weatherApiKey, \"&units=metric\"));\n        const data = await api_call.json();\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else if (cityId === 'Belfast') {\n        const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/weather?id=3333223&appid=\".concat(weatherApiKey, \"&units=metric\"));\n        const data = await api_call.json();\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      }\n    };\n\n    this.hideWeather = () => this.state.city === 'undefined' ? {\n      display: 'none'\n    } : {\n      display: 'block'\n    };\n\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined\n    };\n    this.getWeather = this.getWeather.bind(this);\n    this.hideWeather = this.hideWeather.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button, {\n      city: \"Lurgan\",\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Button, {\n      city: \"Belfast\",\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Button, {\n      city: \"Liverpool\",\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(WeatherTable, {\n      style: this.hideWeather,\n      weather: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/student/Documents/vscode/weather-app-v2/src/App.js"],"names":["React","Component","Button","Header","WeatherTable","App","constructor","props","getWeather","e","weatherApiKey","cityId","currentTarget","value","api_call","fetch","data","json","setState","temperature","main","temp","city","name","country","sys","humidity","description","weather","error","hideWeather","state","display","undefined","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css' \nimport Button from './components/Button.jsx'\nimport Header from './components/Header.jsx'\nimport WeatherTable from './components/WeatherTable.jsx'\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n    }\n\n    this.getWeather = this.getWeather.bind(this);\n    this.hideWeather = this.hideWeather.bind(this);\n  }\n\n  getWeather = async (e) => {\n    const weatherApiKey = 'd9ff1ea8e6576691d7b12ee8f88d044b';\n    const cityId = e.currentTarget.value;\n    if(cityId === 'Lurgan'){\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?id=2652151&appid=${weatherApiKey}&units=metric`)\n      const data = await api_call.json();\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      })\n    }\n     else if(cityId === 'Liverpool'){\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?id=7839747&appid=${weatherApiKey}&units=metric`)\n      const data = await api_call.json();\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      })\n    }\n    else if(cityId === 'Belfast'){\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?id=3333223&appid=${weatherApiKey}&units=metric`)\n      const data = await api_call.json();\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      })\n    }\n  }\n\n  hideWeather = () => this.state.city === 'undefined' ? {display: 'none'} : {display: 'block'}\n\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <Button city=\"Lurgan\" getWeather={this.getWeather} />\n        <Button city=\"Belfast\" getWeather={this.getWeather} />\n        <Button city=\"Liverpool\" getWeather={this.getWeather} />\n        <WeatherTable style={this.hideWeather} weather={this.state} />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}