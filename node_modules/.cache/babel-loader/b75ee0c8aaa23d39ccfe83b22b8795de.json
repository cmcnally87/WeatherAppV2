{"ast":null,"code":"var _jsxFileName = \"/Users/student/Documents/vscode/weather-app-v2/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Button from './components/Button.jsx';\nimport Header from './components/Header.jsx';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async e => {\n      const weatherApiKey = 'd9ff1ea8e6576691d7b12ee8f88d044b';\n      const cityId = e.currentTarget.value;\n\n      if (cityId == 'Lurgan') {\n        const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/weather?id=2652151&appid=\".concat(weatherApiKey, \"&units=metric\"));\n        const data = await api_call.json();\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined\n    };\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Button, {\n      city: \"Lurgan\",\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Button, {\n      city: \"City2\",\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/student/Documents/vscode/weather-app-v2/src/App.js"],"names":["React","Component","Button","Header","App","constructor","props","getWeather","e","weatherApiKey","cityId","currentTarget","value","api_call","fetch","data","json","setState","temperature","main","temp","city","name","country","sys","humidity","description","weather","error","state","undefined","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAO,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAalBC,UAbkB,GAaL,MAAOC,CAAP,IAAa;AACxB,YAAMC,aAAa,GAAG,kCAAtB;AACA,YAAMC,MAAM,GAAGF,CAAC,CAACG,aAAF,CAAgBC,KAA/B;;AACA,UAAGF,MAAM,IAAI,QAAb,EAAsB;AACpB,cAAMG,QAAQ,GAAG,MAAMC,KAAK,4EAAqEL,aAArE,mBAA5B;AACA,cAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAEH,IAAI,CAACI,IAAL,CAAUC,IADX;AAEZC,UAAAA,IAAI,EAAEN,IAAI,CAACO,IAFC;AAGZC,UAAAA,OAAO,EAAER,IAAI,CAACS,GAAL,CAASD,OAHN;AAIZE,UAAAA,QAAQ,EAAEV,IAAI,CAACI,IAAL,CAAUM,QAJR;AAKZC,UAAAA,WAAW,EAAEX,IAAI,CAACY,OAAL,CAAa,CAAb,EAAgBD,WALjB;AAMZE,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD;AACF,KA5BiB;;AAEhB,SAAKC,KAAL,GAAa;AACXX,MAAAA,WAAW,EAAEY,SADF;AAEXT,MAAAA,IAAI,EAAES,SAFK;AAGXP,MAAAA,OAAO,EAAEO,SAHE;AAIXL,MAAAA,QAAQ,EAAEK,SAJC;AAKXJ,MAAAA,WAAW,EAAEI;AALF,KAAb;AAQA,SAAKvB,UAAL,GAAkB,KAAKA,UAAL,CAAgBwB,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAoBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,UAAU,EAAE,KAAKzB,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,UAAU,EAAE,KAAKA,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAxCgC;AA2CnC,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css' \nimport Button from './components/Button.jsx'\nimport Header from './components/Header.jsx'\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n    }\n\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  getWeather = async (e) => {\n    const weatherApiKey = 'd9ff1ea8e6576691d7b12ee8f88d044b';\n    const cityId = e.currentTarget.value;\n    if(cityId == 'Lurgan'){\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?id=2652151&appid=${weatherApiKey}&units=metric`)\n      const data = await api_call.json();\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      })\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <Button city=\"Lurgan\" getWeather={this.getWeather} />\n        <Button city=\"City2\" getWeather={this.getWeather} />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}